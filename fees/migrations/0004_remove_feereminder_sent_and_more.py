# Generated by Django 5.2.3 on 2025-07-23 07:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fees', '0003_feereport_remove_feestructure_category_and_more'),
        ('students', '0006_delete_studentcategory_remove_academicyear_year_and_more'),
    ]

    operations = [
        # 1) The DB already has feepayment.fee_assignment, but Django's state may not.
        #    Add it to STATE ONLY so later ops (AlterField) won't crash.
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.AddField(
                    model_name='feepayment',
                    name='fee_assignment',
                    field=models.ForeignKey(
                        to='fees.studentfeeassignment',
                        on_delete=django.db.models.deletion.SET_NULL,
                        null=True,
                        blank=True,
                    ),
                ),
            ],
        ),

        # 2) Remove FeeReminder.sent in STATE ONLY (column doesn't exist in DB).
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.RemoveField(
                    model_name='feereminder',
                    name='sent',
                ),
            ],
        ),

        # 3) Keep your intended field definitions (STATE change; DB should already match).
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.AlterField(
                    model_name='feepayment',
                    name='fee_assignment',
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='fees.studentfeeassignment',
                    ),
                ),
            ],
        ),

        # 4) These AlterField ops typically don't change SQL (choices), but keep them.
        migrations.AlterField(
            model_name='feereminder',
            name='reminder_type',
            field=models.CharField(
                choices=[('sms', 'SMS'), ('email', 'Email'), ('call', 'Phone Call')],
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name='feereminder',
            name='status',
            field=models.CharField(
                choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')],
                default='pending',
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name='feereport',
            name='report_type',
            field=models.CharField(
                choices=[('summary', 'Summary'), ('detailed', 'Detailed')],
                max_length=20,
            ),
        ),

        # 5) Indexes (created only if not present yet)
        migrations.AddIndex(
            model_name='feepayment',
            index=models.Index(fields=['student'], name='fees_feepay_student_950847_idx'),
        ),
        migrations.AddIndex(
            model_name='studentfeeassignment',
            index=models.Index(fields=['student'], name='fees_studen_student_cf5001_idx'),
        ),
        migrations.AddIndex(
            model_name='studentfeeassignment',
            index=models.Index(fields=['fee_structure'], name='fees_studen_fee_str_14be71_idx'),
        ),
    ]

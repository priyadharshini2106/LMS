# Generated by Django 5.2.3 on 2025-08-01 07:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0002_classlevel_term_remove_exammark_exam_exammark_grade_and_more'),
        ('students', '0008_alter_student_biometric_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamAbsence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('documented', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Exam absences',
            },
        ),
        migrations.CreateModel(
            name='ExamRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('capacity', models.IntegerField()),
                ('building', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('weightage', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('minimum_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade', models.CharField(max_length=2)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-minimum_percentage'],
            },
        ),
        migrations.CreateModel(
            name='MarkEntryVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('storage_path', models.FileField(upload_to='question_papers/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResultPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField()),
                ('message_to_parents', models.TextField()),
                ('is_published', models.BooleanField(default=False)),
            ],
        ),
        migrations.AlterModelOptions(
            name='exammark',
            options={'permissions': [('can_enter_marks', 'Can enter exam marks'), ('can_verify_marks', 'Can verify exam marks')]},
        ),
        migrations.AlterModelOptions(
            name='examschedule',
            options={'ordering': ['exam_date'], 'permissions': [('can_publish_exams', 'Can publish exam schedules')]},
        ),
        migrations.AlterModelOptions(
            name='resultsummary',
            options={'ordering': ['term', 'rank'], 'verbose_name_plural': 'Result summaries'},
        ),
        migrations.AlterModelOptions(
            name='subject',
            options={'permissions': [('can_manage_subjects', 'Can add/edit subjects')]},
        ),
        migrations.AddField(
            model_name='exammark',
            name='exam_schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.examschedule'),
        ),
        migrations.AddField(
            model_name='examschedule',
            name='invigilator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='examschedule',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('completed', 'Completed'), ('graded', 'Graded'), ('published', 'Published')], default='draft', max_length=20),
        ),
        migrations.AddIndex(
            model_name='exammark',
            index=models.Index(fields=['student', 'term'], name='exams_examm_student_0e9a94_idx'),
        ),
        migrations.AddIndex(
            model_name='exammark',
            index=models.Index(fields=['term', 'subject'], name='exams_examm_term_id_e69c69_idx'),
        ),
        migrations.AddField(
            model_name='examabsence',
            name='approved_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='examabsence',
            name='exam_schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.examschedule'),
        ),
        migrations.AddField(
            model_name='examabsence',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student'),
        ),
        migrations.AddField(
            model_name='examschedule',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.examroom'),
        ),
        migrations.AddField(
            model_name='examschedule',
            name='exam_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='exams.examtype'),
        ),
        migrations.AddField(
            model_name='markentryverification',
            name='entered_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entered_marks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='markentryverification',
            name='exam_mark',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exams.exammark'),
        ),
        migrations.AddField(
            model_name='markentryverification',
            name='verified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_marks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='questionpaper',
            name='exam_schedule',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exams.examschedule'),
        ),
        migrations.AddField(
            model_name='questionpaper',
            name='setter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resultpublication',
            name='published_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resultpublication',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.term'),
        ),
    ]
